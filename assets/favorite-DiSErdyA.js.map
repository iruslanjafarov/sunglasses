{"version":3,"file":"favorite-DiSErdyA.js","sources":["../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../node_modules/zustand/esm/vanilla.mjs","../../node_modules/zustand/esm/react.mjs","../../src/app/providers/store.ts","../../src/shared/transitionView/transitionView.tsx","../../src/shared/spinner/spinner.tsx","../../src/shared/fadeView/fadeView.tsx","../../node_modules/@heroicons/react/24/solid/esm/HeartIcon.js","../../src/features/favorite/ui/favorite.tsx"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { invariant } from 'motion-utils';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, exitBeforeEnter, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = presentChildren === renderedChildren ||\n                presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const api = { setState, getState, getInitialState, subscribe };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\n\nexport { createStore };\n","import React from 'react';\nimport { createStore } from 'zustand/vanilla';\n\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity) {\n  const slice = React.useSyncExternalStore(\n    api.subscribe,\n    () => selector(api.getState()),\n    () => selector(api.getInitialState())\n  );\n  React.useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  const api = createStore(createState);\n  const useBoundStore = (selector) => useStore(api, selector);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\n\nexport { create, useStore };\n","import { IProduct } from '@/entities/products/model/types/products';\nimport { create } from 'zustand';\n\ninterface IStore {\n\tproducts: IProduct[];\n\tproduct: IProduct;\n\tsetProducts: (products: IProduct[]) => void;\n\tsetProduct: (product: IProduct) => void;\n}\n\nexport const useStore = create<IStore>((set) => ({\n\tproducts: [],\n\tproduct: { id: 0, path: '', name: '', price: 0, type: '' },\n\tsetProducts: (products) => set({ products: products }),\n\tsetProduct: (product) => set({ product }),\n}));\n","import { FC, PropsWithChildren } from 'react';\nimport { motion } from 'framer-motion';\n\n/**\n * TransitionView\n *\n * This component provides a smooth transition animation for its child elements \n * using **Framer Motion**. The animation includes an initial state with reduced opacity \n * and a slight scale-down, followed by an animation to full opacity and normal scale. \n * When exiting, the component scales down and fades out. \n * This is useful for animating content when it enters or leaves the DOM.\n * \n * The transition has a duration of 0.5 seconds with an `easeOut` easing function, \n * ensuring a smooth and natural effect.\n *\n * @param {PropsWithChildren} props - The component's props.\n * @param {ReactNode} props.children - The content to be animated within the component.\n * \n * @returns {JSX.Element} A JSX element that animates its children with a fade and scale transition.\n */\n\nconst TransitionView: FC<PropsWithChildren> = ({ children }: PropsWithChildren): JSX.Element => {\n\treturn (\n\t\t<motion.div\n\t\t\tinitial={{ opacity: 0, scale: 0.95 }}\n\t\t\tanimate={{ opacity: 1, scale: 1 }}\n\t\t\texit={{ opacity: 0, scale: 0.95 }}\n\t\t\ttransition={{ duration: 0.5, ease: 'easeOut' }}\n\t\t>\n\t\t\t{children}\n\t\t</motion.div>\n\t);\n};\n\nexport default TransitionView;\n","import { FC } from 'react';\n\n/**\n * Spinner\n *\n * This is a simple spinner component used to indicate loading or processing states.\n * It renders a circular spinner with a rotating animation to provide visual feedback \n * while content is loading. The spinner has a fixed size of 64px (16x16), with a black top\n * and right border, creating the effect of a spinning circle.\n * \n * The spinner uses Tailwind CSS classes for styling and animation.\n *\n * @returns {JSX.Element} A JSX element representing a circular spinner.\n */\n\nconst Spinner: FC = (): JSX.Element => {\n\treturn (\n\t\t<div className='w-16 h-16 border-4 border-t-black border-r-black rounded-full animate-spin'></div>\n\t);\n};\n\nexport default Spinner;\n","import { FC, ReactNode } from 'react';\nimport { motion } from 'framer-motion';\n\ninterface IFadeView {\n\tchildren?: ReactNode;\n\tclassName?: string;\n}\n\n/**\n * FadeView\n *\n * This is a functional component that animates its children with a fade-in and slide-up effect using Framer Motion.\n * When the component comes into view, it animates from an initial opacity of 0 and a vertical offset of 80px,\n * gradually fading in and sliding up to its original position. The transition lasts for 0.7 seconds.\n * \n * The `children` prop allows you to pass any content that will be animated.\n * The `className` prop allows you to apply custom CSS classes to the container element.\n *\n * @param {IFadeView} props - The component's props.\n * @param {ReactNode} props.children - The content that will be animated inside the component.\n * @param {string} [props.className] - Optional custom CSS classes for the container element.\n * \n * @returns {JSX.Element} A JSX element that wraps the children and applies the fade-in animation.\n */\n\nconst FadeView: FC<IFadeView> = ({ children, className }: IFadeView): JSX.Element => {\n\treturn (\n\t\t<motion.div\n\t\t\tinitial={{ opacity: 0, y: 80 }}\n\t\t\twhileInView={{ opacity: 1, y: 0 }}\n\t\t\tviewport={{ once: true }}\n\t\t\ttransition={{ duration: 0.7 }}\n\t\t\tclassName={className}\n\t\t>\n\t\t\t{children}\n\t\t</motion.div>\n\t);\n};\n\nexport default FadeView;\n","import * as React from \"react\";\nfunction HeartIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m11.645 20.91-.007-.003-.022-.012a15.247 15.247 0 0 1-.383-.218 25.18 25.18 0 0 1-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0 1 12 5.052 5.5 5.5 0 0 1 16.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 0 1-4.244 3.17 15.247 15.247 0 0 1-.383.219l-.022.012-.007.004-.003.001a.752.752 0 0 1-.704 0l-.003-.001Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(HeartIcon);\nexport default ForwardRef;","import { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { HeartIcon } from '@heroicons/react/24/solid';\n\n/**\n * Favorite component for toggling the favorite state of a product.\n *\n * This component allows users to mark a product as a favorite by clicking the heart icon.\n * The favorite state is persisted in localStorage using the product ID as a key.\n *\n * @param {Object} props - The component props.\n * @param {number} [props.id] - The unique identifier of the product. Optional.\n * @returns {JSX.Element} The rendered Favorite component.\n */\n\nconst Favorite = ({ id }: { id?: number }): JSX.Element => {\n\tconst [isActive, setIsActive] = useState<boolean>(\n\t\tlocalStorage.getItem(`product/${id}/favorite`) === 'true'\n\t);\n\n\t/**\n\t * Handles toggling the favorite state when the icon is clicked.\n\t *\n\t * @param {React.MouseEvent<SVGSVGElement>} event - The mouse event triggered by clicking the icon.\n\t */\n\n\tconst handleIsActive = (event: React.MouseEvent<SVGSVGElement>) => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tsetIsActive((isActivePrevState) => {\n\t\t\tlocalStorage.setItem(\n\t\t\t\t`product/${id}/favorite`,\n\t\t\t\tJSON.stringify(!isActivePrevState)\n\t\t\t);\n\n\t\t\treturn !isActivePrevState;\n\t\t});\n\t};\n\n\treturn (\n\t\t<motion.div\n\t\t\twhileTap={{ scale: 0.8 }}\n\t\t\tanimate={{ color: isActive ? '#F44336' : '#000' }}\n\t\t\ttransition={{ duration: 0.3 }}\n\t\t>\n\t\t\t<HeartIcon\n\t\t\t\tonClick={handleIsActive}\n\t\t\t\tclassName='w-[32px] h-[32px] cursor-pointer'\n\t\t\t/>\n\t\t</motion.div>\n\t);\n};\n\nexport default Favorite;\n"],"names":["PopChildMeasure","React.Component","prevProps","element","size","PopChild","children","isPresent","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","width","height","top","left","style","jsx","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","memoizedOnExitComplete","useCallback","childId","isComplete","context","useMemo","_","key","React.useEffect","PresenceContext","getChildKey","child","onlyElements","filtered","Children","isValidElement","AnimatePresence","exitBeforeEnter","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","i","exitingChildren","nextChildren","forceRender","LayoutGroupContext","Fragment","onExit","isEveryExitComplete","isExitComplete","createStoreImpl","createState","state","listeners","setState","partial","replace","nextState","previousState","listener","getState","api","initialState","createStore","identity","arg","useStore","selector","slice","React","createImpl","useBoundStore","create","set","products","product","TransitionView","motion","Spinner","FadeView","className","HeartIcon","title","titleId","props","svgRef","React.createElement","ForwardRef","React.forwardRef","Favorite","isActive","setIsActive","handleIsActive","event","isActivePrevState"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,10]}